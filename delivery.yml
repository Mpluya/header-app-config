apiVersion: apps/v1
kind: Deployment
metadata:
  name: mae-app
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: mae-app
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: mae-app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: mae-app
      apps.tanzu.vmware.com/auto-configure-actuators: "true"
      apps.tanzu.vmware.com/has-tests: "true"
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: mae-app
      conventions.carto.run/framework: spring-boot
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/correlationid: https://github.com/nkalra0123/spring-boot-dump-headers?sub_path=/
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/version: 2.2.1.RELEASE
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/is-native-app-check
          spring-boot-convention/is-prometheus-enabled-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-web
          spring-boot-convention/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: mae-app
        apps.tanzu.vmware.com/auto-configure-actuators: "true"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: mae-app
        conventions.carto.run/framework: spring-boot
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dserver.port="8080"
        image: us-west2-docker.pkg.dev/shepherd-v2-environment-1/sh2-dash-3254016-oci-registry/workloads/header-app-dev@sha256:2ea6407eab312229ef630ee9b33cf9e0755b6ea81e98fef43da250761648d8f7
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: mae-app
  labels:
    app.kubernetes.io/part-of: mae-app
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: mae-app
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: mae-app
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: mae-app
    conventions.carto.run/framework: spring-boot
  ports:
  - targetPort: 8080
    port: 8080
    name: http

