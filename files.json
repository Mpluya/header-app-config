{"delivery.yml":"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: header-app\n  annotations:\n    kapp.k14s.io/update-strategy: fallback-on-replace\n    ootb.apps.tanzu.vmware.com/servicebinding-workload: \"true\"\n    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings\n  labels:\n    app.kubernetes.io/part-of: header-app\n    apps.tanzu.vmware.com/auto-configure-actuators: \"true\"\n    apps.tanzu.vmware.com/has-tests: \"true\"\n    apps.tanzu.vmware.com/workload-type: server\n    app.kubernetes.io/component: run\n    carto.run/workload-name: header-app\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/component: run\n      app.kubernetes.io/part-of: header-app\n      apps.tanzu.vmware.com/auto-configure-actuators: \"true\"\n      apps.tanzu.vmware.com/has-tests: \"true\"\n      apps.tanzu.vmware.com/workload-type: server\n      carto.run/workload-name: header-app\n      conventions.carto.run/framework: spring-boot\n  template:\n    metadata:\n      annotations:\n        apps.tanzu.vmware.com/correlationid: https://github.com/nkalra0123/spring-boot-dump-headers?sub_path=/\n        autoscaling.knative.dev/minScale: \"1\"\n        boot.spring.io/version: 2.2.1.RELEASE\n        conventions.carto.run/applied-conventions: |-\n          spring-boot-convention/auto-configure-actuators-check\n          spring-boot-convention/is-native-app-check\n          spring-boot-convention/is-prometheus-enabled-check\n          spring-boot-convention/spring-boot\n          spring-boot-convention/spring-boot-web\n          spring-boot-convention/app-live-view-appflavour-check\n        developer.conventions/target-containers: workload\n      labels:\n        app.kubernetes.io/component: run\n        app.kubernetes.io/part-of: header-app\n        apps.tanzu.vmware.com/auto-configure-actuators: \"true\"\n        apps.tanzu.vmware.com/has-tests: \"true\"\n        apps.tanzu.vmware.com/workload-type: server\n        carto.run/workload-name: header-app\n        conventions.carto.run/framework: spring-boot\n    spec:\n      containers:\n      - env:\n        - name: JAVA_TOOL_OPTIONS\n          value: -Dserver.port=\"8080\"\n        image: us-west2-docker.pkg.dev/shepherd-v2-environment-1/sh2-dash-3254016-oci-registry/workloads/header-app-dev@sha256:2ea6407eab312229ef630ee9b33cf9e0755b6ea81e98fef43da250761648d8f7\n        name: workload\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        resources: {}\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            drop:\n            - ALL\n          runAsNonRoot: true\n          runAsUser: 1000\n          seccompProfile:\n            type: RuntimeDefault\n      serviceAccountName: default\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: header-app\n  labels:\n    app.kubernetes.io/part-of: header-app\n    apps.tanzu.vmware.com/auto-configure-actuators: \"true\"\n    apps.tanzu.vmware.com/has-tests: \"true\"\n    apps.tanzu.vmware.com/workload-type: server\n    app.kubernetes.io/component: run\n    carto.run/workload-name: header-app\nspec:\n  selector:\n    app.kubernetes.io/component: run\n    app.kubernetes.io/part-of: header-app\n    apps.tanzu.vmware.com/auto-configure-actuators: \"true\"\n    apps.tanzu.vmware.com/has-tests: \"true\"\n    apps.tanzu.vmware.com/workload-type: server\n    carto.run/workload-name: header-app\n    conventions.carto.run/framework: spring-boot\n  ports:\n  - targetPort: 8080\n    port: 8080\n    name: http\n"}